#this is my peer assigment of practical machine learning.
# I used an random forest algorithm for the data set of Human Activity Recognition.


library(caret)
library(rattle)
library(rpart)
library(randomForest)
library(e1071)

#Set seed for research reproduceability
set.seed(12345)


########Getting the data

trainUrl <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-training.csv"
testUrl <- "http://d396qusza40orc.cloudfront.net/predmachlearn/pml-testing.csv"


#load and clean the data 

training <- read.csv(url(trainUrl), na.strings=c("NA","#DIV/0!",""))
testing <- read.csv(url(testUrl), na.strings=c("NA","#DIV/0!",""))


#split data set in to training and testing

training       <- training[,-c(4,8,10)]
test           <- testing[,-c(4,8,10)]

trainingIndex  <- createDataPartition(training$classe, p=.70, list=FALSE)
trainingtrain <- training[ trainingIndex,]
trainingtest  <- training[-trainingIndex,]
rm.na.cols     <- function(x) { x[ , colSums( is.na(x) ) < nrow(x) ] }
trainingtrain <- rm.na.cols(trainingtrain)
trainingtest  <- rm.na.cols(trainingtest)
complete       <- function(x) {x[,sapply(x, function(y) !any(is.na(y)))] }
incompl        <- function(x) {names( x[,sapply(x, function(y) any(is.na(y)))] ) }
trtr.na.var    <- incompl(trainingtrain)
trts.na.var    <- incompl(trainingtest)
trainingtrain <- complete(trainingtrain)
trainingtest  <- complete(trainingtest)
random.forest <- train(trainingtrain[,-59],
                       trainingtrain$classe,
                       tuneGrid=data.frame(mtry=3),
                       trControl=trainControl(method="none")
)
summary(random.forest)

confusionMatrix(predict(random.forest,
                        newdata=trainingtest[,-59]),
                trainingtest$classe
)
plot( varImp(random.forest) )
